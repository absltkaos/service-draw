#Format of this file is as follows:
#
#The [global] section defines some configuration for the overall service graph
#Options include:
#  name #Title name to create for the graph
#  layout #LR or TB. LR means arrow dependencies will go Left to Right, TB is
#      #Top to Bottom. Default is TB
#  fontcolor #Color to use for the main graph's label
#  bgcolor #Color to use for the main graph
#  default_service_color #Default color option for services (def=black)
#  default_service_bgcolor #Default bgcolor option for services (def=white)
#  default_service_fontcolor #Default fontcolor option for services (def=blue)
#  default_service_shape #Default shape to use for services (def=ellipse)
#  default_service_style #Default style for service_groups (def=filled)
#  default_service_group_color #Default color option for service groups 
#      #(def=black)
#  default_service_group_bgcolor #Default bgcolor option for service groups
#      #(def=white)
#  default_service_group_fontcolor #Default fontcolor option for service groups
#      #(def=black)
#  default_service_group_style #Default style for service_groups (def=None)
#
#Services are denoted with square brackets on the service name on their own
#line. Like so:
#[Service1]
#
#Services can have attributes, all attributes are optional.
#Current attributes are:
#  depends #This is a semi-colon separated list of other Services.Each of these
#          #depended upon service can have alternate list of ports. Defined
#          #with square braces and list of comma separated ports. Preferred
#          #syntax is <proto>-<port>
#  host_expression #Combined class expression that when run returns a list of
#                  #the hosts that the service is composed of.
#  infra_service #True/False whether the service is a supporting
#                #infrastructure service. For example an HTTP proxy LB, etc..
#  shape #Overrride auto selection of shapes for the service
#  type  #Type of service, this can be one of "service_group" or "service" the
#        #default is "service"
#  member_of_group  #Define a name to group the service into. A service can
#                   #only be a member of one group, but service_group can be a
#                   #member of a group as well.
#  color #Color to use for drawing service node shapes
#  fontcolor #Font color to use. Default for Services is "blue" for
#            #service_group is black
#  bgcolor #Color to use for filling in the grouping or node with a color
#  style #Styling for the service or group. Styling options are per:
#        #http://www.graphviz.org/doc/info/attrs.html#k:style
#        #Default for groups is not set, for services it is "filled"
#
[global]
name=Sample Service
bgcolor=lightblue
default_service_bgcolor=cornsilk2
default_service_group_bgcolor=ivory3

[External Zone]
type=service_group
bgcolor=darksalmon

[Internal Zone]
type=service_group
bgcolor=mediumseagreen

[LB]
depends=Web Farm[tcp-8080,tcp-8443]
infra_service=True
member_of_group=External Zone

[Web Farm]
depends=Mysql-Master[tcp-3306];Mysql-Slaves[tcp-3306]
member_of_group=External Zone

[Mysql-Master]
shape=trapezium
member_of_group=Mysql

[Mysql-Slaves]
member_of_group=Mysql
shape=trapezium
depends=Mysql-Master[tcp-3306]

[DB-Backup]
depends=Mysql-Master[tcp-3306];Backup
member_of_group=Mysql

[Mysql]
type=service_group
member_of_group=Internal Zone

[Backup]
type=service_group
member_of_group=Internal Zone

[Backup-Hosts]
member_of_group=Backup
depends=NFS[tcp-2049,udp-2049,udp-1110]

[NFS]
member_of_group=Backup
